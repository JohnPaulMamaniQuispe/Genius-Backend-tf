// <auto-generated />
using System;
using Genius.Infraestructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Genius.Infraestructure.Migrations
{
    [DbContext(typeof(GeniusDBContext))]
    [Migration("20230624135048_ms")]
    partial class ms
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Genius.Infraestructure.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("Cars", (string)null);
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("License")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("Drivers", (string)null);
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.OwnerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("OwnerTypes", (string)null);
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Parking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClosingTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("CostPerHour")
                        .HasColumnType("double");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OpeningTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<double>("PenaltyFee")
                        .HasColumnType("double");

                    b.Property<int>("TotalSpace")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Parkings", (string)null);
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CodePayement")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NamePayement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypePayement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods", (string)null);
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IsFree")
                        .HasColumnType("int");

                    b.Property<int?>("ParkingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParkingId");

                    b.ToTable("Places", (string)null);
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("DueDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ParkingId")
                        .HasColumnType("int");

                    b.Property<string>("TimeLimit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("TotalCost")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("ParkingId");

                    b.ToTable("Reservations", (string)null);
                });

            modelBuilder.Entity("Genius.Infraestructure.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("OwnerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerTypeId");

                    b.ToTable("Owners", (string)null);
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Car", b =>
                {
                    b.HasOne("Genius.Infraestructure.Models.Driver", null)
                        .WithMany("Cars")
                        .HasForeignKey("DriverId");
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Parking", b =>
                {
                    b.HasOne("Genius.Infraestructure.Owner", null)
                        .WithMany("Parkings")
                        .HasForeignKey("OwnerId");

                    b.HasOne("Genius.Infraestructure.Models.PaymentMethod", null)
                        .WithMany("Parkings")
                        .HasForeignKey("PaymentMethodId");
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Place", b =>
                {
                    b.HasOne("Genius.Infraestructure.Models.Parking", null)
                        .WithMany("Places")
                        .HasForeignKey("ParkingId");
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Reservation", b =>
                {
                    b.HasOne("Genius.Infraestructure.Models.Driver", null)
                        .WithMany("Reservations")
                        .HasForeignKey("DriverId");

                    b.HasOne("Genius.Infraestructure.Models.Parking", null)
                        .WithMany("Reservations")
                        .HasForeignKey("ParkingId");
                });

            modelBuilder.Entity("Genius.Infraestructure.Owner", b =>
                {
                    b.HasOne("Genius.Infraestructure.Models.OwnerType", null)
                        .WithMany("Owners")
                        .HasForeignKey("OwnerTypeId");
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Driver", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.OwnerType", b =>
                {
                    b.Navigation("Owners");
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.Parking", b =>
                {
                    b.Navigation("Places");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Genius.Infraestructure.Models.PaymentMethod", b =>
                {
                    b.Navigation("Parkings");
                });

            modelBuilder.Entity("Genius.Infraestructure.Owner", b =>
                {
                    b.Navigation("Parkings");
                });
#pragma warning restore 612, 618
        }
    }
}
